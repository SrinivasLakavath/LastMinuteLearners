"use strict";var Course=require("../models/course"),getCourses=function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Course.find().exec());case 3:t=e.sent,r.json(t),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),r.status(500).json({message:"Error retrieving courses: "+e.t0});case 10:case"end":return e.stop()}},null,null,[[0,7]])},getCourseById=function(r,t){var s,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.params.id,e.prev=1,e.next=4,regeneratorRuntime.awrap(Course.findById(s).exec());case 4:if(n=e.sent){e.next=7;break}return e.abrupt("return",t.status(404).json({message:"Course not found"}));case 7:t.json(n),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(1),t.status(500).json({message:"Error retrieving course: "+e.t0});case 13:case"end":return e.stop()}},null,null,[[1,10]])},addReview=function(r,t){var s,n,a,u,o,c,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.params.id,n=r.body,a=n.author,u=n.rating,o=n.reviewText,e.prev=2,e.next=5,regeneratorRuntime.awrap(Course.findById(s).exec());case 5:if(c=e.sent){e.next=8;break}return e.abrupt("return",t.status(404).json({message:"Course not found"}));case 8:return i={author:a,rating:u,reviewText:o,timestamp:new Date},c.reviews.push(i),e.next=12,regeneratorRuntime.awrap(c.save());case 12:t.status(201).json({message:"Review added successfully"}),e.next=18;break;case 15:e.prev=15,e.t0=e.catch(2),t.status(500).json({message:"Error adding review: "+e.t0});case 18:case"end":return e.stop()}},null,null,[[2,15]])};module.exports={getCourses:getCourses,getCourseById:getCourseById,addReview:addReview};
//# sourceMappingURL=apiCoursesController.min.js.map
