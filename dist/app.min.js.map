{"version":3,"sources":["app.js"],"names":["express","require","path","logger","cookieParser","courseRouter","app","set","join","__dirname","use","json","urlencoded","extended","indexRouter","Error","err","status","req","res","next","message","locals","error","get"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,KAAOD,QAAQ,QADfD,aAAiBC,QAAC,iBAGlBE,OAASF,QAAQ,UAFvBA,QAAU,mBACV,IAAMG,YAAeH,QAAQ,yBAKvBI,aAAeJ,QAAQ,gCAJvBE,IAAMH,UAQZM,IAAIC,IAAI,QAASL,KAAKM,KAAKC,UAAW,SAAU,UAChDH,IAAIC,IAAI,cAAe,QAEvBD,IAAII,IAAIP,OAAO,QACfG,IAAII,IAAIV,QAAQW,QARhBL,IAAMD,IAAAA,QAAYO,WAAW,CAAAC,UAAA,KAU7BP,IAAII,IAAIN,gBACRE,IAAII,IAAIV,QAAO,OAAQE,KAAKM,KAAKC,UAAW,YAP5CH,IAAIC,IAAI,IAAAO,aACRR,IAAIC,IAAI,WAAAF,cAIRC,IAAII,IAAIV,SAAAA,EAAAA,EAAQY,GAAaC,IAAAA,EAAU,IAAAE,MAAA,aAAvCC,EAAAC,OAAA,IACAX,EAAAU,KAeAV,IAAII,IAAI,SAACM,EAAKE,EAAKC,EAAKC,GAVxBd,EAAII,OAAIW,QAAYhB,EAAAA,QAEpBc,EAAAG,OAAAC,MAAA,gBAAAL,EAAAZ,IAAAkB,IAAA,OAAAR,EAAA,GAWEG,EAAIF,OAAOD,EAAIC,QAAU,KAV3BX,EAAII,OAAI,WAGNU,OAAKJ,QAALV","file":"app.min.js","sourcesContent":["const express = require(\"express\");\r\nconst path = require(\"path\");\r\nconst cookieParser = require(\"cookie-parser\");\r\nconst logger = require(\"morgan\");\r\nrequire(\"./api/models/db\"); // Ensure your MongoDB connection is established\r\n\r\nconst indexRouter = require(\"./server/routes/index\"); // Index/Home routes\r\nconst courseRouter = require(\"./server/routes/courseRoutes\"); // Course routes\r\nconst app = express();\r\n\r\n// View engine setup\r\napp.set(\"views\", path.join(__dirname, \"server\", \"views\"));\r\napp.set(\"view engine\", \"jade\");\r\n\r\napp.use(logger(\"dev\"));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, \"public\")));\r\n\r\n// Set up routes\r\napp.use(\"/\", indexRouter); // Home routes or general routes\r\napp.use(\"/courses\", courseRouter); // All course-related routes, including reviews\r\n\r\n// Catch 404 and forward to error handler\r\napp.use((req, res, next) => {\r\n  const err = new Error(\"Not Found\");\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// Error handler\r\napp.use((err, req, res, next) => {\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n  res.status(err.status || 500);\r\n  res.render(\"error\");\r\n});\r\n\r\nmodule.exports = app;\r\n"]}