{"version":3,"sources":["app.js"],"names":["express","require","path","cookieParser","logger","indexRouter","courseRouter","app","set","join","__dirname","use","json","urlencoded","extended","req","res","next","err","Error","status","locals","message","error","get","render","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACAA,OAAO,CAAC,iBAAD,CAAP,C,CAA4B;;;AAE5B,IAAMI,WAAW,GAAGJ,OAAO,CAAC,uBAAD,CAA3B,C,CAAsD;;;AACtD,IAAMK,YAAY,GAAGL,OAAO,CAAC,8BAAD,CAA5B,C,CAA8D;;;AAC9D,IAAMM,GAAG,GAAGP,OAAO,EAAnB,C,CAEA;;AACAO,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBN,IAAI,CAACO,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,OAA/B,CAAjB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AAEAD,GAAG,CAACI,GAAJ,CAAQP,MAAM,CAAC,KAAD,CAAd;AACAG,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACY,IAAR,EAAR;AACAL,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACa,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQR,YAAY,EAApB;AACAI,GAAG,CAACI,GAAJ,CAAQX,OAAO,UAAP,CAAeE,IAAI,CAACO,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR,E,CAEA;;AACAH,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaN,WAAb,E,CAA2B;;AAC3BE,GAAG,CAACI,GAAJ,CAAQ,UAAR,EAAoBL,YAApB,E,CAAmC;AAEnC;;AACAC,GAAG,CAACI,GAAJ,CAAQ,UAACI,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,EAAAA,GAAG,CAACE,MAAJ,GAAa,GAAb;AACAH,EAAAA,IAAI,CAACC,GAAD,CAAJ;AACD,CAJD,E,CAMA;;AACAX,GAAG,CAACI,GAAJ,CAAQ,UAACO,GAAD,EAAMH,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/BD,EAAAA,GAAG,CAACK,MAAJ,CAAWC,OAAX,GAAqBJ,GAAG,CAACI,OAAzB;AACAN,EAAAA,GAAG,CAACK,MAAJ,CAAWE,KAAX,GAAmBR,GAAG,CAACR,GAAJ,CAAQiB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE;AACAF,EAAAA,GAAG,CAACI,MAAJ,CAAWF,GAAG,CAACE,MAAJ,IAAc,GAAzB;AACAJ,EAAAA,GAAG,CAACS,MAAJ,CAAW,OAAX;AACD,CALD;AAOAC,MAAM,CAACC,OAAP,GAAiBpB,GAAjB","sourcesContent":["const express = require(\"express\");\r\nconst path = require(\"path\");\r\nconst cookieParser = require(\"cookie-parser\");\r\nconst logger = require(\"morgan\");\r\nrequire(\"./api/models/db\"); // Ensure your MongoDB connection is established\r\n\r\nconst indexRouter = require(\"./server/routes/index\"); // Index/Home routes\r\nconst courseRouter = require(\"./server/routes/courseRoutes\"); // Course routes\r\nconst app = express();\r\n\r\n// View engine setup\r\napp.set(\"views\", path.join(__dirname, \"server\", \"views\"));\r\napp.set(\"view engine\", \"jade\");\r\n\r\napp.use(logger(\"dev\"));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, \"public\")));\r\n\r\n// Set up routes\r\napp.use(\"/\", indexRouter); // Home routes or general routes\r\napp.use(\"/courses\", courseRouter); // All course-related routes, including reviews\r\n\r\n// Catch 404 and forward to error handler\r\napp.use((req, res, next) => {\r\n  const err = new Error(\"Not Found\");\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// Error handler\r\napp.use((err, req, res, next) => {\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n  res.status(err.status || 500);\r\n  res.render(\"error\");\r\n});\r\n\r\nmodule.exports = app;\r\n"],"file":"app.dev.js"}