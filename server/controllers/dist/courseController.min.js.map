{"version":3,"sources":["courseController.js"],"names":["Course","require","exports","getCourseListView","req","res","courses","regeneratorRuntime","async","_context","prev","next","awrap","find","exec","sent","t0","status","send","stop","getCourseDetailsView","courseId","course","_context2","params","id","findById","abrupt","addReviewView","_req$body","author","rating","reviewText","newReview","_context3","body","reviews","push","save"],"mappings":"aACA,IAAMA,OAASC,QAAQ,2BAEvBC,QAAAC,kBAAA,SAAAC,EAAAC,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAG0BZ,OAAOa,OAAOC,QAHxC,KAAA,EAGUR,EAHVG,EAAAM,KACAb,EAAQC,OAAAA,aAAoB,CAAAG,QAAAA,IAD5BG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,MAAA,GAC4BJ,EAAAY,OAAA,KAAAC,KAAA,6BAAAT,EAAAO,IAD5B,KAAA,GAAA,IAAA,MAAA,OAAAP,EAAAU,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAC4BjB,QAAAkB,qBAAA,SAAAhB,EAAAC,GAAA,IAAAgB,EAAAC,EAAA,OAAAf,mBAAAC,MAAA,SAAAe,GAAA,OAAA,OAAAA,EAAAb,KAAAa,EAAAZ,MAAA,KAAA,EAAA,OAAAU,EAAAjB,EAAAoB,OAAAC,GAAAF,EAAAb,KAAA,EAAAa,EAAAZ,KAAA,EAAAJ,mBAAAK,MAAAZ,OAAA0B,SAAAL,GAAAP,QAAA,KAAA,EAAA,GAAAQ,EAAAC,EAAAR,KAAA,CAAAQ,EAAAZ,KAAA,EAAA,MAAA,OAAAY,EAAAI,OAAA,SAEoBtB,EAAAY,OAAA,KAAAC,KAAA,qBAFpB,KAAA,EAGGZ,EAAAA,OAAAA,gBAAAA,CAAAA,OAAAA,IAHHiB,EAAAZ,KAAA,GAAA,MAAA,KAAA,GAAAY,EAAAb,KAAA,GAAAa,EAAAP,GAAAO,EAAA,MAAA,GAmBxBlB,EAAIY,OAAO,KAAKC,KAAK,4BAAAK,EAAAP,IAnBG,KAAA,GAAA,IAAA,MAAA,OAAAO,EAAAJ,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAAjB,QAAA0B,cAAA,SAAAxB,EAAAC,GAAA,IAAAgB,EAAAQ,EAAAC,EAAAC,EAAAC,EAAAV,EAAAW,EAAA,OAAA1B,mBAAAC,MAAA,SAAA0B,GAAA,OAAA,OAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAAA,OAAAU,EAAAjB,EAAAoB,OAAAC,GAAAI,EAAAzB,EAAA+B,KAAAL,EAAAD,EAAAC,OAAAC,EAAAF,EAAAE,OAAAC,EAAAH,EAAAG,WAAAE,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAAAJ,mBAAAK,MAAAZ,OAAA0B,SAAAL,GAAAP,QAAA,KAAA,EAAA,GAAAQ,EAAAY,EAAAnB,KAAA,CAAAmB,EAAAvB,KAAA,EAAA,MAAA,OAAAuB,EAAAP,OAAA,SAAAtB,EAAAY,OAAA,KAAAC,KAAA,qBAAA,KAAA,EAAA,OAAAe,EAAA,CAS5BH,OAAAA,EA0BMC,OAAAA,EACAC,WAAAA,EA1BN9B,UAAQkB,IAAAA,MAAuBE,EAAAc,QAAAC,KAAAJ,GAVHC,EAAAvB,KAAA,GAAAJ,mBAAAK,MAUGU,EAAAgB,QAVH,KAAA,GAWpBjB,EAAAA,SAAAA,YAAAA,OAAeG,IAXKU,EAAAvB,KAAA,GAAA,MAAA,KAAA,GAAAuB,EAAAxB,KAAA,GAAAwB,EAAAlB,GAAAkB,EAAA,MAAA,GAUG7B,EAAAY,OAAA,KAAAC,KAAA,wBAAAgB,EAAAlB,IAVH,KAAA,GAAA,IAAA,MAAA,OAAAkB,EAAAf,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"courseController.min.js","sourcesContent":["// /server/controllers/courseController.js\r\nconst Course = require(\"../../api/models/course\"); // Adjust the path as necessary\r\n\r\n// Controller to render the course list view\r\nexports.getCourseListView = async (req, res) => {\r\n  try {\r\n    const courses = await Course.find().exec(); // Fetch all courses\r\n    res.render(\"courseList\", { courses }); // Render the course list view\r\n  } catch (error) {\r\n    res.status(500).send(\"Error retrieving courses: \" + error);\r\n  }\r\n};\r\n\r\n// Controller to render the course details view\r\nexports.getCourseDetailsView = async (req, res) => {\r\n  const courseId = req.params.id;\r\n  try {\r\n    const course = await Course.findById(courseId).exec(); // Fetch course by ID\r\n    if (!course) {\r\n      return res.status(404).send(\"Course not found\");\r\n    }\r\n    res.render(\"courseDetails\", { course }); // Render the course details view\r\n  } catch (error) {\r\n    res.status(500).send(\"Error retrieving course: \" + error);\r\n  }\r\n};\r\n// Controller to handle adding a review to a course (view-side)\r\nexports.addReviewView = async (req, res) => {\r\n  const courseId = req.params.id;\r\n  const { author, rating, reviewText } = req.body;\r\n\r\n  try {\r\n    const course = await Course.findById(courseId).exec();\r\n    if (!course) {\r\n      return res.status(404).send(\"Course not found\");\r\n    }\r\n\r\n    const newReview = {\r\n      author,\r\n      rating,\r\n      reviewText,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    course.reviews.push(newReview); // Add the new review to the course's reviews array\r\n    await course.save(); // Save the updated course\r\n\r\n    res.redirect(`/courses/${courseId}`); // Redirect to the course details page\r\n  } catch (error) {\r\n    res.status(500).send(\"Error adding review: \" + error);\r\n  }\r\n};\r\n\r\n"]}