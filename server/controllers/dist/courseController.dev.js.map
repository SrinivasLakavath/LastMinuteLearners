{"version":3,"sources":["courseController.js"],"names":["Course","require","exports","getCourseListView","req","res","find","exec","courses","render","status","send","getCourseDetailsView","courseId","params","id","findById","course","addReviewView","body","author","rating","reviewText","newReview","timestamp","Date","reviews","push","save","redirect"],"mappings":";;AAAA;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,yBAAD,CAAtB,C,CAAmD;AAEnD;;;AACAC,OAAO,CAACC,iBAAR,GAA4B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEFL,MAAM,CAACM,IAAP,GAAcC,IAAd,EAFE;;AAAA;AAElBC,UAAAA,OAFkB;AAEoB;AAC5CH,UAAAA,GAAG,CAACI,MAAJ,CAAW,YAAX,EAAyB;AAAED,YAAAA,OAAO,EAAPA;AAAF,WAAzB,EAHwB,CAGe;;AAHf;AAAA;;AAAA;AAAA;AAAA;AAKxBH,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,0CAArB;;AALwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B,C,CASA;;;AACAT,OAAO,CAACU,oBAAR,GAA+B,kBAAOR,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBQ,UAAAA,QADuB,GACZT,GAAG,CAACU,MAAJ,CAAWC,EADC;AAAA;AAAA;AAAA,0CAGNf,MAAM,CAACgB,QAAP,CAAgBH,QAAhB,EAA0BN,IAA1B,EAHM;;AAAA;AAGrBU,UAAAA,MAHqB;;AAAA,cAItBA,MAJsB;AAAA;AAAA;AAAA;;AAAA,4CAKlBZ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CALkB;;AAAA;AAO3BN,UAAAA,GAAG,CAACI,MAAJ,CAAW,eAAX,EAA4B;AAAEQ,YAAAA,MAAM,EAANA;AAAF,WAA5B,EAP2B,CAOc;;AAPd;AAAA;;AAAA;AAAA;AAAA;AAS3BZ,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,0CAArB;;AAT2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B,C,CAYA;;;AACAT,OAAO,CAACgB,aAAR,GAAwB,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChBQ,UAAAA,QADgB,GACLT,GAAG,CAACU,MAAJ,CAAWC,EADN;AAAA,sBAEiBX,GAAG,CAACe,IAFrB,EAEdC,MAFc,aAEdA,MAFc,EAENC,MAFM,aAENA,MAFM,EAEEC,UAFF,aAEEA,UAFF;AAAA;AAAA;AAAA,0CAKCtB,MAAM,CAACgB,QAAP,CAAgBH,QAAhB,EAA0BN,IAA1B,EALD;;AAAA;AAKdU,UAAAA,MALc;;AAAA,cAMfA,MANe;AAAA;AAAA;AAAA;;AAAA,4CAOXZ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CAPW;;AAAA;AAUdY,UAAAA,SAVc,GAUF;AAChBH,YAAAA,MAAM,EAANA,MADgB;AAEhBC,YAAAA,MAAM,EAANA,MAFgB;AAGhBC,YAAAA,UAAU,EAAVA,UAHgB;AAIhBE,YAAAA,SAAS,EAAE,IAAIC,IAAJ;AAJK,WAVE;AAiBpBR,UAAAA,MAAM,CAACS,OAAP,CAAeC,IAAf,CAAoBJ,SAApB,EAjBoB,CAiBY;;AAjBZ;AAAA,0CAkBdN,MAAM,CAACW,IAAP,EAlBc;;AAAA;AAkBC;AAErBvB,UAAAA,GAAG,CAACwB,QAAJ,oBAAyBhB,QAAzB,GApBoB,CAoBkB;;AApBlB;AAAA;;AAAA;AAAA;AAAA;AAsBpBR,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sCAArB;;AAtBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["// /server/controllers/courseController.js\r\nconst Course = require(\"../../api/models/course\"); // Adjust the path as necessary\r\n\r\n// Controller to render the course list view\r\nexports.getCourseListView = async (req, res) => {\r\n  try {\r\n    const courses = await Course.find().exec(); // Fetch all courses\r\n    res.render(\"courseList\", { courses }); // Render the course list view\r\n  } catch (error) {\r\n    res.status(500).send(\"Error retrieving courses: \" + error);\r\n  }\r\n};\r\n\r\n// Controller to render the course details view\r\nexports.getCourseDetailsView = async (req, res) => {\r\n  const courseId = req.params.id;\r\n  try {\r\n    const course = await Course.findById(courseId).exec(); // Fetch course by ID\r\n    if (!course) {\r\n      return res.status(404).send(\"Course not found\");\r\n    }\r\n    res.render(\"courseDetails\", { course }); // Render the course details view\r\n  } catch (error) {\r\n    res.status(500).send(\"Error retrieving course: \" + error);\r\n  }\r\n};\r\n// Controller to handle adding a review to a course (view-side)\r\nexports.addReviewView = async (req, res) => {\r\n  const courseId = req.params.id;\r\n  const { author, rating, reviewText } = req.body;\r\n\r\n  try {\r\n    const course = await Course.findById(courseId).exec();\r\n    if (!course) {\r\n      return res.status(404).send(\"Course not found\");\r\n    }\r\n\r\n    const newReview = {\r\n      author,\r\n      rating,\r\n      reviewText,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    course.reviews.push(newReview); // Add the new review to the course's reviews array\r\n    await course.save(); // Save the updated course\r\n\r\n    res.redirect(`/courses/${courseId}`); // Redirect to the course details page\r\n  } catch (error) {\r\n    res.status(500).send(\"Error adding review: \" + error);\r\n  }\r\n};\r\n\r\n"],"file":"courseController.dev.js"}